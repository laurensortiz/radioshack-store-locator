@import "compass/utilities/sprites";         // Include compass sprite helpers
@import "compass/css3/background-size";      // Include helper to calc background size

@mixin retina-background($file-1x, $file-2x, $width-1x, $height-1x) {
  background-image: url("#{$file-1x}");
  background-size: $width-1x $height-1x;
  background-repeat: no-repeat;
  @media
  only screen and (-webkit-min-device-pixel-ratio: 2),
  only screen and (   min--moz-device-pixel-ratio: 2),
  only screen and (     -o-min-device-pixel-ratio: 2/1),
  only screen and (        min-device-pixel-ratio: 2),
  only screen and (                min-resolution: 192dpi),
  only screen and (                min-resolution: 2dppx) {
    background-image: url("#{$file-2x}");
    background-size: $width-1x $height-1x;
  }
}

@mixin pseudoElement($width, $height){
  display: inline-block;
  content: "";
  width:$width+px;
  height:$height+px;

}

@mixin rsk-font-face ($font) {
  $font-path: "#{$base-font-url}#{$font-effra-prepend}#{$font}#{$font-effra-append}";

  @font-face {
    @include font-face($font, $font-path);
  }

}
@mixin font-face($fontname, $fontfile) {

    font-family: "#{$fontname}";
    src: url("#{$fontfile}.eot");
    src: url("#{$fontfile}.eot?#iefix") format("embedded-opentype"),
         url("#{$fontfile}.woff") format("woff"),
         url("#{$fontfile}.ttf") format("truetype"),
         url("#{$fontfile}.svg##{$fontname}") format("svg");
    font-weight: normal;
    font-style: normal;
}

@mixin font-size($fontSize:12,$lineHeight:auto,$vaValue:auto){
  $sizeToEm : ($fontSize/12)+em;
  $va : ($vaValue/1000)+em;

  font-size: $sizeToEm;
  letter-spacing: $va;
  @if $lineHeight != auto{
    line-height : ($lineHeight/$fontSize)+em;
  }
  @else{
    line-height : ($fontSize/$fontSize)+em
  }

}

@mixin inline-block(){
  display: inline-block;
  margin-right: -3px;
}

// Center-align a block level element
// ----------------------------------
@mixin center-block() {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// IE7 inline-block
// ----------------
@mixin ie7-inline-block() {
  *display: inline; /* IE7 inline-block hack */
  *zoom: 1;
}

@mixin prefix($property, $value) {
  @each $prefix in -webkit-, -moz-, -ms-, -o-, '' {
    #{$prefix}#{$property}: $value;
  }
}

@mixin vertical-align {
  @include prefix(transform, translateY(-50%));
  position: relative;
  top: 50%;
}

// Place Holders

@mixin placeholder {
  &::-webkit-input-placeholder {@content}
  &:-moz-placeholder           {@content}
  &::-moz-placeholder          {@content}
  &:-ms-input-placeholder      {@content}
}
// Background sizing
@mixin background-size($size) {
  -webkit-background-size: $size;
  -moz-background-size: $size;
  -o-background-size: $size;
  background-size: $size;
}

// Retina Sprite Mixins

@mixin retina-sprite-background($fromLeft, $fromTop){
  $posLeft : -($fromLeft *25);
  $posTop : -($fromTop *25);
  background-repeat: no-repeat;
  background-image: sprite-url($normalSizeSprite);
  background-position: $posLeft $posTop;


  // Media Query for retina
  @media
  only screen and (-webkit-min-device-pixel-ratio: 2),
  only screen and (   min--moz-device-pixel-ratio: 2),
  only screen and (     -o-min-device-pixel-ratio: 2/1),
  only screen and (        min-device-pixel-ratio: 2),
  only screen and (                min-resolution: 192dpi),
  only screen and (                min-resolution: 2dppx) {

    background-image: sprite-url($retinaSizeSprite);
    background-position: 0 round(nth(sprite-position($retinaSizeSprite, $name), 2) / 2);
    height:round(image-height(sprite-file($retinaSizeSprite, $name)) / 2);
    width: round(image-width(sprite-file($retinaSizeSprite, $name)) /2 );

    // treat the @2x retina sprite sheet as 50% wide for double resolution upon display
    $double-width:ceil(image-width(sprite-path($retinaSizeSprite)) / 2);
    $auto-height:auto;
    @include background-size($double-width $auto-height);
  }
}





@mixin imageBySprite($positionLeft,$positionRight){
  background-image: url("#{$spriteNormalSize}");
  background-repeat: no-repeat;
  background-position: $positionLeft $positionRight;
  @media
  only screen and (-webkit-min-device-pixel-ratio: 2),
  only screen and (   min--moz-device-pixel-ratio: 2),
  only screen and (     -o-min-device-pixel-ratio: 2/1),
  only screen and (        min-device-pixel-ratio: 2),
  only screen and (                min-resolution: 192dpi),
  only screen and (                min-resolution: 2dppx) {
    background-image: url("#{$spriteRetinaSize}");
    background-position: $positionLeft $positionRight;
  }
}
